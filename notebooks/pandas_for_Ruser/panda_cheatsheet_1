# Pandas Cheatsheet for R Users (tidyverse/data.table background)

import pandas as pd

# ========================
# 🧱 Data Loading
# ========================

# R: read.csv("file.csv")
df = pd.read_csv("file.csv")

# ========================
# 🔍 Filtering Rows
# ========================

# R (dplyr): filter(df, x > 0)
df = df[df["x"] > 0]         # Boolean indexing

# Multiple conditions
# R: filter(df, x > 0 & y < 10)
df = df[(df["x"] > 0) & (df["y"] < 10)]

# ========================
# ✨ Selecting Columns
# ========================

# R: select(df, x, y)
df = df[["x", "y"]]          # Note: double square brackets

# Drop a column (like select(-x))
df = df.drop(columns=["x"])

# ========================
# 🎯 Creating or Mutating Columns
# ========================

# R: mutate(df, z = x + y)
df["z"] = df["x"] + df["y"]

# Multiple new columns (like mutate)
df = df.assign(
    z = lambda d: d["x"] + d["y"],
    ratio = lambda d: d["x"] / d["y"]
)

# ========================
# 🧹 Remove Missing Values
# ========================

# R: drop_na(df)
df = df.dropna()

# ========================
# 📊 Grouping and Summarizing
# ========================

# R: group_by(group) %>% summarize(mean = mean(x))
df_summary = df.groupby("group")["x"].mean().reset_index(name="mean")

# Multiple aggregations
# R: summarize(mean = mean(x), max = max(x))
df_summary = df.groupby("group").agg(
    mean_x = ("x", "mean"),
    max_x = ("x", "max")
).reset_index()

# ========================
# 🧪 Sorting
# ========================

# R: arrange(df, x)
df = df.sort_values("x")

# R: arrange(df, desc(x))
df = df.sort_values("x", ascending=False)

# ========================
# 🪄 Pipe-like chaining
# ========================

# Equivalent to R: df %>% filter(...) %>% mutate(...)
df = (
    df[df["x"] > 0]
    .assign(new = lambda d: d["x"] * 2)
    .sort_values("new")
)

# ========================
# 🔁 Looping (rowwise)
# ========================

# R: rowwise() + mutate()
# Python: apply row-by-row (use sparingly)
df["out"] = df.apply(lambda row: row["x"] * row["y"], axis=1)

# ========================
# 🧠 Summary
# ========================
# ✅ Use square brackets for filtering/selection
# ✅ Use .assign() or df["new"] = ... for mutation
# ✅ Use .groupby() + .agg() for grouped summaries
# ✅ Avoid for-loops; prefer vectorized or .apply()
# ✅ Use chaining for tidyverse-style workflows
